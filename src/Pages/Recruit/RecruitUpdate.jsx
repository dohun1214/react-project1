import { useContext, useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { Button } from '../../components';
import { jobPostContext } from '../../contexts/jobPostContext';
import usePageTitle from '../../hooks/usePageTitle'

const timeOptions = ['Ïò§Ï†Ñ', 'Ïò§ÌõÑ', 'ÌíÄÌÉÄÏûÑ', 'ÌòëÏùò ÌõÑ Í≤∞Ï†ï'];
const daysOptions = ['ÌèâÏùº', 'Ï£ºÎßê', 'ÏïºÍ∞Ñ', 'Ï£ºÌú¥'];
const categoryOptions = ['Ìé∏ÏùòÏ†ê', 'ÏùåÏãùÏ†ê', 'ÏÇ¨Î¨¥ÏßÅ', 'ÏÑúÎπÑÏä§ÏóÖ', 'Í∏∞Ïà†ÏßÅ', 'Í∏∞ÌÉÄ'];
const regionOptions = ['Í∞ïÎÇ®Íµ¨', 'Ïö©ÏÇ∞Íµ¨', 'ÎèôÏûëÍµ¨', 'ÏÜ°ÌååÍµ¨', 'ÎßàÌè¨Íµ¨', 'ÏÑúÏ¥àÍµ¨', 'ÏòÅÎì±Ìè¨Íµ¨', 'Ï¢ÖÎ°úÍµ¨', 'Ï§ëÍµ¨', 'Í¥ÄÏïÖÍµ¨', 'Íµ¨Î°úÍµ¨', 'Í¥ëÏßÑÍµ¨', 'ÏÑ±ÎèôÍµ¨', 'ÎÖ∏ÏõêÍµ¨', 'Í∞ïÎ∂ÅÍµ¨'];
const payOptions = ['10,000Ïõê', '10,500Ïõê', '11,000Ïõê', '12,000Ïõê', '12,500Ïõê', 'ÌòëÏùò ÌõÑ Í≤∞Ï†ï'];
const preferenceOptions = ['Í≤ΩÎ†•Ïûê Ïö∞ÎåÄ', 'Ï¥àÎ≥¥ Í∞ÄÎä•', 'Í∏âÍµ¨', 'ÏπúÏ†à'];

const RecruitUpdate = () => {
  const { id } = useParams();
  const { jobPosts, setJobPosts } = useContext(jobPostContext);
  const [form, setForm] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const navigate = useNavigate();
  usePageTitle("Ï±ÑÏö©Í≥µÍ≥† ÏàòÏ†ï - JOBBLE")  

  useEffect(() => {
    const post = jobPosts.find((p) => p.id === Number(id));
    if (!post) return navigate('/recruit');
    setForm(post);
    setIsLoading(false);
  }, [id, jobPosts, navigate]);

  const updateField = (field, value) =>
    setForm({ ...form, [field]: value });

  const handleUpdate = () => {
    if (!form.company.trim()) return alert('ÌöåÏÇ¨Î™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
    if (!form.title.trim()) return alert('Ï†úÎ™©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
    if (!form.content.trim()) return alert('ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');

    setJobPosts(jobPosts.map((p) => (p.id === form.id ? form : p)));
    navigate(`/recruit/${form.id}`);
  };

  if (isLoading || !form) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 flex items-center justify-center">
        <div className="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 p-8 text-center">
          <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4 animate-pulse">
            <span className="text-2xl text-blue-500">‚è≥</span>
          </div>
          <p className="text-slate-600">Î°úÎî© Ï§ë...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
      <div className="p-6 max-w-4xl mx-auto">
        <div className="mb-8">
          <div className="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 p-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-2">
                  Ï±ÑÏö©Í≥µÍ≥† ÏàòÏ†ï
                </h1>
                <p className="text-slate-600">Ï±ÑÏö© Í≥µÍ≥† ÎÇ¥Ïö©ÏùÑ ÏàòÏ†ïÌïòÏÑ∏Ïöî</p>
              </div>
              <div className="flex items-center gap-2 text-sm text-slate-500">
                <span className="w-4 h-4 bg-blue-100 rounded-full flex items-center justify-center">
                  <span className="text-blue-500 text-xs">üìù</span>
                </span>
                ÏàòÏ†ï Î™®Îìú
              </div>
            </div>
          </div>
        </div>

        <div className="bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 p-8">
          <div className="space-y-6">
            <div className="grid lg:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-semibold text-slate-700 mb-2">
                  ÌöåÏÇ¨Î™Ö <span className="text-red-500">*</span>
                </label>
                <div className="relative">
                  <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <span className="text-slate-400 text-sm">üè¢</span>
                  </div>
                  <input
                    type="text"
                    value={form.company}
                    onChange={(e) => updateField('company', e.target.value)}
                    className="w-full pl-10 pr-4 py-3 bg-white/50 border border-slate-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 placeholder-slate-400"
                    placeholder="ÌöåÏÇ¨Î™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                  />
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-slate-700 mb-2">
                  Ï±ÑÏö© Ï†úÎ™© <span className="text-red-500">*</span>
                </label>
                <div className="relative">
                  <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <span className="text-slate-400 text-sm">üíº</span>
                  </div>
                  <input
                    type="text"
                    value={form.title}
                    onChange={(e) => updateField('title', e.target.value)}
                    className="w-full pl-10 pr-4 py-3 bg-white/50 border border-slate-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 placeholder-slate-400"
                    placeholder="Ï±ÑÏö© Ï†úÎ™©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                  />
                </div>
              </div>
            </div>

            <div>
              <h3 className="text-lg font-semibold text-slate-800 mb-4 flex items-center gap-2">
                <span className="w-6 h-6 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg flex items-center justify-center">
                  <span className="text-white text-xs">‚öôÔ∏è</span>
                </span>
                Í∑ºÎ¨¥ Ï°∞Í±¥
              </h3>
              <div className="grid lg:grid-cols-3 gap-4">
                {[
                  ['time', 'Í∑ºÎ¨¥ÏãúÍ∞Ñ', timeOptions, '‚è∞'],
                  ['days', 'Í∑ºÎ¨¥ÏöîÏùº', daysOptions, 'üìÖ'],
                  ['region', 'ÏßÄÏó≠', regionOptions, 'üìç'],
                  ['pay', 'Í∏âÏó¨', payOptions, 'üí∞'],
                  ['category', 'Ïπ¥ÌÖåÍ≥†Î¶¨', categoryOptions, 'üè¢'],
                  ['preference', 'Ïö∞ÎåÄÏÇ¨Ìï≠', preferenceOptions, '‚≠ê'],
                ].map(([key, label, opts, icon]) => (
                  <div key={key}>
                    <label className="block text-sm font-medium text-slate-700 mb-2">
                      {label}
                    </label>
                    <div className="relative">
                      <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <span className="text-slate-400 text-sm">{icon}</span>
                      </div>
                      <select
                        value={form[key]}
                        onChange={(e) => updateField(key, e.target.value)}
                        className="w-full pl-10 pr-4 py-3 bg-white/50 border border-slate-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 appearance-none cursor-pointer"
                      >
                        {opts.map((o) => (
                          <option key={o} value={o}>{o}</option>
                        ))}
                      </select>
                      <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                        <span className="text-slate-400 text-sm">‚ñº</span>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            <div>
              <label className="block text-sm font-semibold text-slate-700 mb-2">
                ÏÉÅÏÑ∏ ÎÇ¥Ïö© <span className="text-red-500">*</span>
              </label>
              <div className="relative">
                <textarea
                  value={form.content}
                  onChange={(e) => updateField('content', e.target.value)}
                  className="w-full h-48 p-4 bg-white/50 border border-slate-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 placeholder-slate-400 resize-none"
                  placeholder="Ï±ÑÏö© Í≥µÍ≥†Ïùò ÏÉÅÏÑ∏ ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                />
              </div>
            </div>

            <div className="bg-blue-50/50 backdrop-blur-sm rounded-xl border border-blue-200/30 p-4">
              <div className="flex items-center gap-2 text-sm text-blue-700">
                <span className="w-4 h-4 bg-blue-500 rounded-full flex items-center justify-center">
                  <span className="text-white text-xs">‚ÑπÔ∏è</span>
                </span>
                <span>ÏõêÎ≥∏ ÏûëÏÑ±Ïùº: {new Date(form.createdAt).toLocaleString('ko-KR')}</span>
              </div>
            </div>

            <div className="flex justify-end gap-4 pt-6 border-t border-slate-200">
              <Button
                onClick={() => navigate(`/recruit/${form.id}`)}
                className="bg-slate-200 hover:bg-slate-300 text-slate-700 px-6 py-3"
              >
                <span className="flex items-center gap-2">
                  <span>‚ùå</span>
                  Ï∑®ÏÜå
                </span>
              </Button>
              <Button
                onClick={handleUpdate}
                className="bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white px-8 py-3 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-200"
              >
                <span className="flex items-center gap-2">
                  <span>üíæ</span>
                  ÏàòÏ†ï ÏôÑÎ£å
                </span>
              </Button>
            </div>
          </div>
        </div>

        <div className="mt-6 bg-amber-50/50 backdrop-blur-sm rounded-2xl border border-amber-200/30 p-6">
          <h3 className="text-lg font-semibold text-amber-800 mb-3 flex items-center gap-2">
            <span className="w-6 h-6 bg-amber-500 rounded-lg flex items-center justify-center">
              <span className="text-white text-xs">‚ö†Ô∏è</span>
            </span>
            ÏàòÏ†ï Ïãú Ï£ºÏùòÏÇ¨Ìï≠
          </h3>
          <div className="grid md:grid-cols-2 gap-4 text-sm text-amber-700">
            <div className="space-y-2">
              <p>‚Ä¢ ÏàòÏ†ïÎêú ÎÇ¥Ïö©ÏùÄ Ï¶âÏãú Î∞òÏòÅÎê©ÎãàÎã§</p>
              <p>‚Ä¢ Ï§ëÏöîÌïú Ï†ïÎ≥¥ Î≥ÄÍ≤Ω Ïãú ÏßÄÏõêÏûêÏóêÍ≤å ÏïàÎÇ¥ÌïòÏÑ∏Ïöî</p>
            </div>
            <div className="space-y-2">
              <p>‚Ä¢ Í∏âÏó¨ÎÇò Í∑ºÎ¨¥Ï°∞Í±¥ Î≥ÄÍ≤Ω Ïãú Ïã†Ï§ëÌûà Í≤ÄÌÜ†ÌïòÏÑ∏Ïöî</p>
              <p>‚Ä¢ ÏàòÏ†ï ÌõÑ ÎÇ¥Ïö©ÏùÑ Îã§Ïãú ÌïúÎ≤à ÌôïÏù∏ÌïòÏÑ∏Ïöî</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default RecruitUpdate;